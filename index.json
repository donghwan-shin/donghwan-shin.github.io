[{"authors":["admin"],"categories":null,"content":"I am a research associate at SVV (Software Verification and Validation) group at SnT, University of Luxembourg. I am doing research because I like to surpass myself, keep learning and aim higher. I believe software engineering can improve the cost-effectiveness of our world. My research interests are mainly related to bugs: how to kill bugs (i.e., testing) and how to fix the software programs (i.e., debugging). Recently, I am also interested in systematic testing approaches for AI-based systems.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://donghwan-shin.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I am a research associate at SVV (Software Verification and Validation) group at SnT, University of Luxembourg. I am doing research because I like to surpass myself, keep learning and aim higher. I believe software engineering can improve the cost-effectiveness of our world. My research interests are mainly related to bugs: how to kill bugs (i.e., testing) and how to fix the software programs (i.e., debugging). Recently, I am also interested in systematic testing approaches for AI-based systems.","tags":null,"title":"Donghwan Shin","type":"authors"},{"authors":["Fitash Ul Haq","Donghwan Shin","Shiva Nejati","Lionel Briand"],"categories":null,"content":"","date":1584921600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1584921600,"objectID":"7f104f088e500e21ddc6782e946c911b","permalink":"https://donghwan-shin.github.io/publication/haq-2019-comparing/","publishdate":"2019-12-21T19:14:58.167149Z","relpermalink":"/publication/haq-2019-comparing/","section":"publication","summary":"There is a growing body of research on developing testing techniques for Deep Neural Networks (DNN). We distinguish two general modes of testing for DNNs: Offline testing where DNNs are tested as individual units based on test datasets obtained independently from the DNNs under test, and online testing where DNNs are embedded into a specific application and tested in a close-loop mode in interaction with the application environment. In addition, we identify two sources for generating test datasets for DNNs: Datasets obtained from real-life and datasets generated by simulators. While offline testing can be used with datasets obtained from either sources, online testing is largely confined to using simulators since online testing within real-life applications can be time-consuming, expensive and dangerous. In this paper, we study the following two important questions aiming to compare test datasets and testing modes for DNNs: First, can we use simulator-generated data as a reliable substitute to real-world data for the purpose of DNN testing? Second, how do online and offline testing results differ and complement each other? Though these questions are generally relevant to all autonomous systems, we study them in the context of automated driving systems where, as study subjects, we use DNNs automating end-to-end control of cars' steering actuators. Our results show that simulator-generated datasets are able to yield DNN prediction errors that are similar to those obtained by testing DNNs with real-life datasets. Further, offline testing is more optimistic than online testing as many safety violations identified by online testing could not be identified by offline testing, while large prediction errors generated by offline testing always led to severe safety violations detectable by online testing.","tags":null,"title":"Comparing Offline and Online Testing of Deep Neural Networks: An Autonomous Car Case Study","type":"publication"},{"authors":["Fitash Ul Haq","Donghwan Shin","Shiva Nejati","Lionel Briand"],"categories":null,"content":"","date":1576956246,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576956246,"objectID":"d88aa0c6075cc4d6086ecdfcc6f1072f","permalink":"https://donghwan-shin.github.io/publication/content/publication/haq-2019-comparing/","publishdate":"2019-12-21T19:24:06.336735Z","relpermalink":"/publication/content/publication/haq-2019-comparing/","section":"publication","summary":"","tags":null,"title":"Comparing Offline and Online Testing of Deep Neural Networks: An Autonomous Car Case Study","type":"publication"},{"authors":["Junghun Yoo","Youlim Jung","Donghwan Shin","Minhyo Bae","Eunkyoung Jee"],"categories":null,"content":"","date":1548979200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548979200,"objectID":"5619cdab828d51227c1f085ebfff525c","permalink":"https://donghwan-shin.github.io/publication/8666514/","publishdate":"2019-12-21T17:27:44.159044Z","relpermalink":"/publication/8666514/","section":"publication","summary":"","tags":["Blockchain;Consensus algorithm;Safety;Cryptocurrency;federated Byzantine agreement;Stellar Consensus Protocol;UPPAAL"],"title":"Formal Modeling and Verification of a Federated Byzantine Agreement Algorithm for Blockchain Platforms","type":"publication"},{"authors":["J. Yoo","Y. Jung","D. Shin","M. Bae","E. Jee"],"categories":null,"content":"","date":1548979200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548979200,"objectID":"ba6766aaf9795c59e60b331ef1b05226","permalink":"https://donghwan-shin.github.io/publication/content/publication/8666514/","publishdate":"2019-12-21T19:24:06.326196Z","relpermalink":"/publication/content/publication/8666514/","section":"publication","summary":"","tags":["Blockchain;Consensus algorithm;Safety;Cryptocurrency;federated Byzantine agreement;Stellar Consensus Protocol;UPPAAL"],"title":"Formal Modeling and Verification of a Federated Byzantine Agreement Algorithm for Blockchain Platforms","type":"publication"},{"authors":["Donghwan Shin","Shin Yoo","Mike Papadakis","Doo-Hwan Bae"],"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"ede522144e2082bb49eddb6be3652bec","permalink":"https://donghwan-shin.github.io/publication/content/publication/doi-10-1002-stvr-1695/","publishdate":"2019-12-21T19:24:06.323812Z","relpermalink":"/publication/content/publication/doi-10-1002-stvr-1695/","section":"publication","summary":"In this paper, we propose a new test case prioritization technique that combines both mutation-based and diversity-aware approaches. The diversity-aware mutation-based technique relies on the notion of mutant distinguishment, which aims to distinguish one mutant's behaviour from another, rather than from the original program. The relative cost and effectiveness of the mutation-based prioritization techniques (i.e., using both the traditional mutant kill and the proposed mutant distinguishment) are empirically investigated with 352 real faults and 553,477 developer-written test cases. The empirical evaluation considers both the traditional and the diversity-aware mutation criteria in various settings: single-objective greedy, hybrid, and multi-objective optimization. The results show that there is no single dominant technique across all the studied faults. To this end, the reason why each one of the mutation-based prioritization criteria performs poorly is discussed, using a graphical model called Mutant Distinguishment Graph that demonstrates the distribution of the fault-detecting test cases with respect to mutant kills and distinguishment. Â© 2018 John Wiley \u0026 Sons, Ltd.","tags":["mutation testing","test case prioritization","regression testing"],"title":"Empirical evaluation of mutation-based test case prioritization techniques","type":"publication"},{"authors":["Donghwan Shin","Shin Yoo","Mike Papadakis","Doo-Hwan Bae"],"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"bb4caa7513357b927bc1a9b7166fd033","permalink":"https://donghwan-shin.github.io/publication/doi-10-1002-stvr-1695/","publishdate":"2019-12-21T17:27:44.15677Z","relpermalink":"/publication/doi-10-1002-stvr-1695/","section":"publication","summary":"In this paper, we propose a new test case prioritization technique that combines both mutation-based and diversity-aware approaches. The diversity-aware mutation-based technique relies on the notion of mutant distinguishment, which aims to distinguish one mutant's behaviour from another, rather than from the original program. The relative cost and effectiveness of the mutation-based prioritization techniques (i.e., using both the traditional mutant kill and the proposed mutant distinguishment) are empirically investigated with 352 real faults and 553,477 developer-written test cases. The empirical evaluation considers both the traditional and the diversity-aware mutation criteria in various settings: single-objective greedy, hybrid, and multi-objective optimization. The results show that there is no single dominant technique across all the studied faults. To this end, the reason why each one of the mutation-based prioritization criteria performs poorly is discussed, using a graphical model called Mutant Distinguishment Graph that demonstrates the distribution of the fault-detecting test cases with respect to mutant kills and distinguishment.","tags":["mutation testing","test case prioritization","regression testing"],"title":"Empirical evaluation of mutation-based test case prioritization techniques","type":"publication"},{"authors":["Donghwan Shin","Shin Yoo","Doo-Hwan Bae"],"categories":null,"content":"","date":1538352000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538352000,"objectID":"86501d7a8e7b19046c0545495f6e6975","permalink":"https://donghwan-shin.github.io/publication/7994647/","publishdate":"2019-12-21T13:33:58.555767Z","relpermalink":"/publication/7994647/","section":"publication","summary":"Diversity has been widely studied in software testing as a guidance towards effective sampling of test inputs in the vast space of possible program behaviors. However, diversity has received relatively little attention in mutation testing. The traditional mutation adequacy criterion is a one-dimensional measure of the total number of killed mutants. We propose a novel, diversity-aware mutation adequacy criterion called distinguishing mutation adequacy criterion, which is fully satisfied when each of the considered mutants can be identified by the set of tests that kill it, thereby encouraging inclusion of more diverse range of tests. This paper presents the formal definition of the distinguishing mutation adequacy and its score. Subsequently, an empirical study investigates the relationship among distinguishing mutation score, fault detection capability, and test suite size. The results show that the distinguishing mutation adequacy criterion detects 1.33 times more unseen faults than the traditional mutation adequacy criterion, at the cost of a 1.56 times increase in test suite size, for adequate test suites that fully satisfies the criteria. The results show a better picture for inadequate test suites; on average, 8.63 times more unseen faults are detected at the cost of a 3.14 times increase in test suite size.","tags":null,"title":"A Theoretical and Empirical Study of Diversity-Aware Mutation Adequacy Criterion","type":"publication"},{"authors":["D. Shin","S. Yoo","D. Bae"],"categories":null,"content":"","date":1538352000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538352000,"objectID":"5fc65b5fc99ad4368cdaad4a804c5172","permalink":"https://donghwan-shin.github.io/publication/content/publication/7994647/","publishdate":"2019-12-21T19:24:06.321996Z","relpermalink":"/publication/content/publication/7994647/","section":"publication","summary":"","tags":null,"title":"A Theoretical and Empirical Study of Diversity-Aware Mutation Adequacy Criterion","type":"publication"},{"authors":["Mingyu Jin","Donghwan Shin","Doo-Hwan Bae"],"categories":null,"content":"","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514764800,"objectID":"089b081a6c8473df346c4cfaf81a49d4","permalink":"https://donghwan-shin.github.io/publication/content/publication/jin-2018-aea-3167132-3167426/","publishdate":"2019-12-21T19:24:06.327814Z","relpermalink":"/publication/content/publication/jin-2018-aea-3167132-3167426/","section":"publication","summary":"","tags":["action-benefit-cost modeling","agent-based modeling","decision-making","interaction","system of systems"],"title":"ABC+: Extended Action-benefit-cost Modeling with Knowledge-based Decision-making and Interaction Model for System of Systems Simulation","type":"publication"},{"authors":["Mingyu Jin","Donghwan Shin","Doo-Hwan Bae"],"categories":null,"content":"","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514764800,"objectID":"26a05ba0100caa2cd12bfff8fda0d6c5","permalink":"https://donghwan-shin.github.io/publication/jin-2018-aea-3167132-3167426/","publishdate":"2019-12-21T17:27:44.160378Z","relpermalink":"/publication/jin-2018-aea-3167132-3167426/","section":"publication","summary":"","tags":["action-benefit-cost modeling","agent-based modeling","decision-making","interaction","system of systems"],"title":"ABC+: Extended Action-benefit-cost Modeling with Knowledge-based Decision-making and Interaction Model for System of Systems Simulation","type":"publication"},{"authors":["Mike Papadakis","Donghwan Shin","Shin Yoo","Doo-Hwan Bae"],"categories":null,"content":"","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514764800,"objectID":"e20bb328d6c1c7a1076d984779738c2c","permalink":"https://donghwan-shin.github.io/publication/content/publication/papadakis-2018-msc-3180155-3180183/","publishdate":"2019-12-21T19:24:06.326915Z","relpermalink":"/publication/content/publication/papadakis-2018-msc-3180155-3180183/","section":"publication","summary":"","tags":["mutation testing","real faults","test suite effectiveness"],"title":"Are Mutation Scores Correlated with Real Fault Detection?: A Large Scale Empirical Study on the Relationship Between Mutants and Real Faults","type":"publication"},{"authors":["Mike Papadakis","Donghwan Shin","Shin Yoo","Doo-Hwan Bae"],"categories":null,"content":"","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514764800,"objectID":"42b20d4ad15029765bc45e5cfec9aba5","permalink":"https://donghwan-shin.github.io/publication/papadakis-2018-msc-3180155-3180183/","publishdate":"2019-12-21T17:27:44.159732Z","relpermalink":"/publication/papadakis-2018-msc-3180155-3180183/","section":"publication","summary":"Empirical validation of software testing studies is increasingly relying on mutants. This practice is motivated by the strong correlation between mutant scores and real fault detection that is reported in the literature. In contrast, our study shows that correlations are the results of the confounding effects of the test suite size. In particular, we investigate the relation between two independent variables, mutation score and test suite size, with one dependent variable the detection of (real) faults. We use two data sets, CoreBench and Defects4J, with large C and Java programs and real faults and provide evidence that all correlations between mutation scores and real fault detection are weak when controlling for test suite size. We also find that both independent variables significantly influence the dependent one, with significantly better fits, but overall with relative low prediction power. By measuring the fault detection capability of the top ranked, according to mutation score, test suites (opposed to randomly selected test suites of the same size), we find that achieving higher mutation scores improves significantly the fault detection. Taken together, our data suggest that mutants provide good guidance for improving the fault detection of test suites, but their correlation with fault detection are weak.","tags":["mutation testing","real faults","test suite effectiveness"],"title":"Are Mutation Scores Correlated with Real Fault Detection?: A Large Scale Empirical Study on the Relationship Between Mutants and Real Faults","type":"publication"},{"authors":["Junho Kim","Donghwan Shin","Doo-Hwan Bae"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"e4b866595f2b05f318adff11b1711621","permalink":"https://donghwan-shin.github.io/publication/content/publication/kim-2017-applicability/","publishdate":"2019-12-21T19:24:06.333409Z","relpermalink":"/publication/content/publication/kim-2017-applicability/","section":"publication","summary":"","tags":null,"title":"An Applicability Study of Action-Benefit-Cost Model and Statistical Model Checking for System of Systems Goal Achievement Verification","type":"publication"},{"authors":["Junho Kim","Donghwan Shin","Doo-Hwan Bae"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"15e0d659e371379891f27d1446a31b40","permalink":"https://donghwan-shin.github.io/publication/kim-2017-applicability/","publishdate":"2019-12-21T17:27:44.165162Z","relpermalink":"/publication/kim-2017-applicability/","section":"publication","summary":"","tags":null,"title":"An Applicability Study of Action-Benefit-Cost Model and Statistical Model Checking for System of Systems Goal Achievement Verification","type":"publication"},{"authors":["Wonkyung Yun","Donghwan Shin","Doo-Hwan Bae"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"c8a6eba34c9b7bd2fd6326992e12d168","permalink":"https://donghwan-shin.github.io/publication/content/publication/yun-2017-mas-3103196-3103200/","publishdate":"2019-12-21T19:24:06.328755Z","relpermalink":"/publication/content/publication/yun-2017-mas-3103196-3103200/","section":"publication","summary":"","tags":["mutation analysis","simulation of urban mobility (SUMO)","system of systems","system of systems policy","system of systems testing"],"title":"Mutation Analysis for System of Systems Policy Testing","type":"publication"},{"authors":["Wonkyung Yun","Donghwan Shin","Doo-Hwan Bae"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"795d71bc8238a42c7dcfe7308d560a66","permalink":"https://donghwan-shin.github.io/publication/yun-2017-mas-3103196-3103200/","publishdate":"2019-12-21T17:27:44.161041Z","relpermalink":"/publication/yun-2017-mas-3103196-3103200/","section":"publication","summary":"","tags":["mutation analysis","simulation of urban mobility (SUMO)","system of systems","system of systems policy","system of systems testing"],"title":"Mutation Analysis for System of Systems Policy Testing","type":"publication"},{"authors":["Donghwan Shin","Eunkyoung Jee","Doo-Hwan Bae"],"categories":null,"content":"","date":1467331200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1467331200,"objectID":"e6b9d18e6e3f73457a807ba9dc3fb318","permalink":"https://donghwan-shin.github.io/publication/content/publication/shin-2016-comprehensive/","publishdate":"2019-12-21T19:24:06.32443Z","relpermalink":"/publication/content/publication/shin-2016-comprehensive/","section":"publication","summary":"Function block diagram (FBD), a graphical modeling language for programmable logic controllers, has been widely used to implement safety critical system software such as nuclear reactor protection systems. With the growing importance of structural testing for FBD models, structural test coverage criteria for FBD models have been proposed and evaluated using mutation analysis in our previous work. We extend the previous work by comprehensively analyzing the relationships among fault detection effectiveness, test suite size, and coverage level through several research questions. We generate a large number of test suites achieving an FBD test coverage ranging from 0 to 100 %, and we also generate many artificial faults (i.e. mutants) for the FBD models. Our analysis results show that the fault detection effectiveness of the FBD coverage criteria increases with increasing coverage levels, and the coverage criteria are highly effective at detecting faults in all subject models. Furthermore, the test suites generated with the FBD coverage criteria are more effective and efficient than the randomly generated test suites. The FBD coverage criteria are strong at detecting faults in Boolean edges, while relatively weak at detecting wrong constants in FBD models. Empirical knowledge regarding our experiments provide the validity of using the FBD coverage criteria, and therefore, of FBD model-based testing.","tags":null,"title":"Comprehensive analysis of FBD test coverage criteria using mutants","type":"publication"},{"authors":["Donghwan Shin","Eunkyoung Jee","Doo-Hwan Bae"],"categories":null,"content":"","date":1467331200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1467331200,"objectID":"9b8d1fa9bb58e26378ba99f9ddb2d116","permalink":"https://donghwan-shin.github.io/publication/shin-2016-comprehensive/","publishdate":"2019-12-21T17:27:44.157359Z","relpermalink":"/publication/shin-2016-comprehensive/","section":"publication","summary":"Function block diagram (FBD), a graphical modeling language for programmable logic controllers, has been widely used to implement safety critical system software such as nuclear reactor protection systems. With the growing importance of structural testing for FBD models, structural test coverage criteria for FBD models have been proposed and evaluated using mutation analysis in our previous work. We extend the previous work by comprehensively analyzing the relationships among fault detection effectiveness, test suite size, and coverage level through several research questions. We generate a large number of test suites achieving an FBD test coverage ranging from 0 to 100 %, and we also generate many artificial faults (i.e. mutants) for the FBD models. Our analysis results show that the fault detection effectiveness of the FBD coverage criteria increases with increasing coverage levels, and the coverage criteria are highly effective at detecting faults in all subject models. Furthermore, the test suites generated with the FBD coverage criteria are more effective and efficient than the randomly generated test suites. The FBD coverage criteria are strong at detecting faults in Boolean edges, while relatively weak at detecting wrong constants in FBD models. Empirical knowledge regarding our experiments provide the validity of using the FBD coverage criteria, and therefore, of FBD model-based testing.","tags":null,"title":"Comprehensive analysis of FBD test coverage criteria using mutants","type":"publication"},{"authors":["Donghwan Shin","Doo-Hwan Bae"],"categories":null,"content":"","date":1459468800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1459468800,"objectID":"e862f104ad331600a383d130f6d4a10a","permalink":"https://donghwan-shin.github.io/publication/7515481/","publishdate":"2019-12-21T17:27:44.162073Z","relpermalink":"/publication/7515481/","section":"publication","summary":"","tags":null,"title":"A Theoretical Framework for Understanding Mutation-Based Testing Methods","type":"publication"},{"authors":["D. Shin","D. Bae"],"categories":null,"content":"","date":1459468800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1459468800,"objectID":"e10a7513d937f2673d5c12a9d710a201","permalink":"https://donghwan-shin.github.io/publication/content/publication/7515481/","publishdate":"2019-12-21T19:24:06.330388Z","relpermalink":"/publication/content/publication/7515481/","section":"publication","summary":"","tags":null,"title":"A Theoretical Framework for Understanding Mutation-Based Testing Methods","type":"publication"},{"authors":["Donghwan Shin","Shin Yoo","Doo-Hwan Bae"],"categories":null,"content":"","date":1459468800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1459468800,"objectID":"8a8689851245f158a5386e753c6757d0","permalink":"https://donghwan-shin.github.io/publication/7528954/","publishdate":"2019-12-21T17:27:44.161542Z","relpermalink":"/publication/7528954/","section":"publication","summary":"","tags":null,"title":"Diversity-Aware Mutation Adequacy Criterion for Improving Fault Detection Capability","type":"publication"},{"authors":["D. Shin","S. Yoo","D. Bae"],"categories":null,"content":"","date":1459468800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1459468800,"objectID":"443bdfebd4f619a1ad1fb2e11336b0ec","permalink":"https://donghwan-shin.github.io/publication/content/publication/7528954/","publishdate":"2019-12-21T19:24:06.329618Z","relpermalink":"/publication/content/publication/7528954/","section":"publication","summary":"","tags":null,"title":"Diversity-Aware Mutation Adequacy Criterion for Improving Fault Detection Capability","type":"publication"},{"authors":["Donghwan Shin","Junho Kim","Wonkyung Yun","Eunkyoung Jee","Doo-Hwan Bae"],"categories":null,"content":"","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1451606400,"objectID":"2dd312236ec8876b124f4232290e51e6","permalink":"https://donghwan-shin.github.io/publication/content/publication/shin-2016-case/","publishdate":"2019-12-21T19:24:06.333953Z","relpermalink":"/publication/content/publication/shin-2016-case/","section":"publication","summary":"","tags":null,"title":"A Case Study for Mutation-based Fault Localization for FBD Programs","type":"publication"},{"authors":["Donghwan Shin","Junho Kim","Wonkyung Yun","Eunkyoung Jee","Doo-Hwan Bae"],"categories":null,"content":"","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1451606400,"objectID":"307d1b32c10a7471cd444a3d6c861a11","permalink":"https://donghwan-shin.github.io/publication/shin-2016-case/","publishdate":"2019-12-21T17:27:44.165913Z","relpermalink":"/publication/shin-2016-case/","section":"publication","summary":"","tags":null,"title":"A Case Study for Mutation-based Fault Localization for FBD Programs","type":"publication"},{"authors":["Yoolim Jung","Eunkyoung Jee","Donghwan Shin","Doo-Hwan Bae"],"categories":null,"content":"","date":1435708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1435708800,"objectID":"642cc1255d96a5169fa9682009ebbfe1","permalink":"https://donghwan-shin.github.io/publication/7273621/","publishdate":"2019-12-21T17:27:44.163179Z","relpermalink":"/publication/7273621/","section":"publication","summary":"","tags":null,"title":"Efficient Testing of Self-Adaptive Behaviors in Collective Adaptive Systems","type":"publication"},{"authors":["Y. J. Lim","E. Jee","D. Shin","D. Bae"],"categories":null,"content":"","date":1435708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1435708800,"objectID":"7aa50b623398182c7c2ee2cc8fc2b1f3","permalink":"https://donghwan-shin.github.io/publication/content/publication/7273621/","publishdate":"2019-12-21T19:24:06.331567Z","relpermalink":"/publication/content/publication/7273621/","section":"publication","summary":"","tags":null,"title":"Efficient Testing of Self-Adaptive Behaviors in Collective Adaptive Systems","type":"publication"},{"authors":["Jihun Park","Dongwon Seo","Gwangui Hong","Donghwan Shin","Jimin Hwa","Doo-Hwan Bae"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"5782a5755fece5271b29925182991e70","permalink":"https://donghwan-shin.github.io/publication/content/publication/doi-10-1142-s-021819401540001-x/","publishdate":"2019-12-21T19:24:06.325092Z","relpermalink":"/publication/content/publication/doi-10-1142-s-021819401540001-x/","section":"publication","summary":" Software planning is very important for the success of a software project. Even if the same developers work on the same project, the time span of the project and the quality of software may change based on the project plan. When software managers plan a software project, they strive to allocate human resources in a more efficient way to produce a better software with less cost. The planning process is, however, time-consuming and complicated, especially when the size of the software project is large. Many approaches have been proposed to help software project managers by providing optimal human resource allocations in terms of minimizing the cost. Previous approaches, however, only concentrated on minimizing the cost, and no existing works have considered the practical issues affecting project schedules in practice. We elicited the practical considerations relating to the human resource allocation problem through discussions with a group of software project experts. The practical considerations can affect the project schedule in practice, but their importance has not been taken into consideration in previous approaches. Reflecting the practical considerations, we propose an approach for solving the human resource allocation problem using a genetic algorithm (GA). We compare our approach to an approach that only considers minimization of the time span. Our evaluation shows that the proposed algorithm considers the practical considerations well, in terms of continuous allocation on relevant tasks, minimization of developer multitasking time, and balance of allocation. We also conducted a survey targeting software developers and managers, and the responses showed that practical considerations are as important as minimizing the cost, and our approach would be helpful to software managers. We also investigate the effect of weight factors and coefficient between sub-scores, and find that it is difficult to consider some practical considerations at the same time.","tags":null,"title":"Human Resource Allocation in Software Project with Practical Considerations","type":"publication"},{"authors":["Jihun Park","Dongwon Seo","Gwangui Hong","Donghwan Shin","Jimin Hwa","Doo-Hwan Bae"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"1c834c96f856d5d08b49359c68b94721","permalink":"https://donghwan-shin.github.io/publication/doi-10-1142-s-021819401540001-x/","publishdate":"2019-12-21T17:27:44.157949Z","relpermalink":"/publication/doi-10-1142-s-021819401540001-x/","section":"publication","summary":" Software planning is very important for the success of a software project. Even if the same developers work on the same project, the time span of the project and the quality of software may change based on the project plan. When software managers plan a software project, they strive to allocate human resources in a more efficient way to produce a better software with less cost. The planning process is, however, time-consuming and complicated, especially when the size of the software project is large. Many approaches have been proposed to help software project managers by providing optimal human resource allocations in terms of minimizing the cost. Previous approaches, however, only concentrated on minimizing the cost, and no existing works have considered the practical issues affecting project schedules in practice. We elicited the practical considerations relating to the human resource allocation problem through discussions with a group of software project experts. The practical considerations can affect the project schedule in practice, but their importance has not been taken into consideration in previous approaches. Reflecting the practical considerations, we propose an approach for solving the human resource allocation problem using a genetic algorithm (GA). We compare our approach to an approach that only considers minimization of the time span. Our evaluation shows that the proposed algorithm considers the practical considerations well, in terms of continuous allocation on relevant tasks, minimization of developer multitasking time, and balance of allocation. We also conducted a survey targeting software developers and managers, and the responses showed that practical considerations are as important as minimizing the cost, and our approach would be helpful to software managers. We also investigate the effect of weight factors and coefficient between sub-scores, and find that it is difficult to consider some practical considerations at the same time.","tags":null,"title":"Human Resource Allocation in Software Project with Practical Considerations","type":"publication"},{"authors":["Dongwon Seo","Donghwan Shin","Doo-Hwan Bae"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"be5690c9b39e81b276f7bf707bc77538","permalink":"https://donghwan-shin.github.io/publication/content/publication/seo-2015-quality/","publishdate":"2019-12-21T19:24:06.331058Z","relpermalink":"/publication/content/publication/seo-2015-quality/","section":"publication","summary":"","tags":null,"title":"Quality Based Software Project Staffing and Scheduling with Budget and Deadline.","type":"publication"},{"authors":["Dongwon Seo","Donghwan Shin","Doo-Hwan Bae"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"4597621fe9c5baf6474f92639163d9f2","permalink":"https://donghwan-shin.github.io/publication/seo-2015-quality/","publishdate":"2019-12-21T17:27:44.162678Z","relpermalink":"/publication/seo-2015-quality/","section":"publication","summary":"","tags":null,"title":"Quality Based Software Project Staffing and Scheduling with Budget and Deadline.","type":"publication"},{"authors":["Dongwon Seo","Donghwan Shin","Doo-Hwan Bae"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"4ebbe55a2cd1d45a43c13e6791967ecf","permalink":"https://donghwan-shin.github.io/publication/content/publication/seo-2015-quality-2/","publishdate":"2019-12-21T19:24:06.334502Z","relpermalink":"/publication/content/publication/seo-2015-quality-2/","section":"publication","summary":"","tags":null,"title":"Quality-based software project staffing and scheduling with project deadline","type":"publication"},{"authors":["Dongwon Seo","Donghwan Shin","Doo-Hwan Bae"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"774898dcc58a7f90743decf85927e3ed","permalink":"https://donghwan-shin.github.io/publication/seo-2015-quality-2/","publishdate":"2019-12-21T17:27:44.166744Z","relpermalink":"/publication/seo-2015-quality-2/","section":"publication","summary":"","tags":null,"title":"Quality-based software project staffing and scheduling with project deadline","type":"publication"},{"authors":["Eunkyoung Jee","Donghwan Shin","Sungdeok Cha","Jang-Soo Lee","Doo-Hwan Bae"],"categories":null,"content":"","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1388534400,"objectID":"858c2eb06d6e70a249dfaf26f39a45d5","permalink":"https://donghwan-shin.github.io/publication/content/publication/doi-10-1002-stvr-1548/","publishdate":"2019-12-21T19:24:06.32323Z","relpermalink":"/publication/content/publication/doi-10-1002-stvr-1548/","section":"publication","summary":"Automated and effective testing for function block diagram (FBD) programs has become an important issue, as FBD is increasingly used in implementing safety-critical systems. This work describes an automated test case generation technique for FBD programs and its associated toolâFBDTester. Given an FBD program and desired test coverage criteria, FBDTester generates test requirements and invokes the Satisfiability Modulo Theories solver iteratively to derive a set of test cases. An industrial case study using reactor protection system software shows that the automatically generated test suites detected at least 82% of the known faults, whereas manually generated test cases only detected approximately 35%. Mutation analysis revealed that the automatically generated test suites substantially outperformed manually generated ones. Although test sequence generation requires some manual effort in the current FBDTester, it is apparent that the proposed approach significantly improves the efficiency and the reliability of FBD testing. Copyright Â© 2014 John Wiley \u0026 Sons, Ltd.","tags":["automated test case generation","function block diagram","SMT solver","programmable logic controller"],"title":"Automated test case generation for FBD programs implementing reactor protection system software","type":"publication"},{"authors":["Eunkyoung Jee","Donghwan Shin","Sungdeok Cha","Jang-Soo Lee","Doo-Hwan Bae"],"categories":null,"content":"","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1388534400,"objectID":"6f6e65f7a3fa201ca1bf548c5ade8c5b","permalink":"https://donghwan-shin.github.io/publication/doi-10-1002-stvr-1548/","publishdate":"2019-12-21T17:27:44.156016Z","relpermalink":"/publication/doi-10-1002-stvr-1548/","section":"publication","summary":"Automated and effective testing for function block diagram (FBD) programs has become an important issue, as FBD is increasingly used in implementing safety-critical systems. This work describes an automated test case generation technique for FBD programs and its associated toolâFBDTester. Given an FBD program and desired test coverage criteria, FBDTester generates test requirements and invokes the Satisfiability Modulo Theories solver iteratively to derive a set of test cases. An industrial case study using reactor protection system software shows that the automatically generated test suites detected at least 82% of the known faults, whereas manually generated test cases only detected approximately 35%. Mutation analysis revealed that the automatically generated test suites substantially outperformed manually generated ones. Although test sequence generation requires some manual effort in the current FBDTester, it is apparent that the proposed approach significantly improves the efficiency and the reliability of FBD testing.","tags":["automated test case generation","function block diagram","SMT solver","programmable logic controller"],"title":"Automated test case generation for FBD programs implementing reactor protection system software","type":"publication"},{"authors":["Jihun Park","Dongwon Seo","Gwangui Hong","Donghwan Shin","Jimin Hwa","Doo-Hwan Bae"],"categories":null,"content":"","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1388534400,"objectID":"5989e97a161316d624ad343b7c52ef5f","permalink":"https://donghwan-shin.github.io/publication/content/publication/park-2014-practical/","publishdate":"2019-12-21T19:24:06.332251Z","relpermalink":"/publication/content/publication/park-2014-practical/","section":"publication","summary":"","tags":null,"title":"Practical Human Resource Allocation in Software Projects Using Genetic Algorithm.","type":"publication"},{"authors":["Jihun Park","Dongwon Seo","Gwangui Hong","Donghwan Shin","Jimin Hwa","Doo-Hwan Bae"],"categories":null,"content":"","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1388534400,"objectID":"7270e34d27c7bf3f9039f9e029fdd582","permalink":"https://donghwan-shin.github.io/publication/park-2014-practical/","publishdate":"2019-12-21T17:27:44.163746Z","relpermalink":"/publication/park-2014-practical/","section":"publication","summary":"","tags":null,"title":"Practical Human Resource Allocation in Software Projects Using Genetic Algorithm.","type":"publication"},{"authors":["J Hwa","J Park","D Shin","G Hong","YS Seo","G Bae","DH Bae"],"categories":null,"content":"","date":1356998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1356998400,"objectID":"2bfed09c040948b00650c4aac4ca4bee","permalink":"https://donghwan-shin.github.io/publication/content/publication/hwa-2013-automated/","publishdate":"2019-12-21T19:24:06.336155Z","relpermalink":"/publication/content/publication/hwa-2013-automated/","section":"publication","summary":"","tags":null,"title":"Automated Human Resource Allocation based on Practical Feedback from Software Industry","type":"publication"},{"authors":["Jimin Hwa","Jihun Park","Donghwan Shin","Gwangui Hong","Yong-Seok Seo","Gigon Bae","Doo-Hwan Bae"],"categories":null,"content":"","date":1356998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1356998400,"objectID":"36c21824d8ee078a14ce2d5253bfc19b","permalink":"https://donghwan-shin.github.io/publication/hwa-2013-automated/","publishdate":"2019-12-21T17:27:44.169Z","relpermalink":"/publication/hwa-2013-automated/","section":"publication","summary":"","tags":null,"title":"Automated Human Resource Allocation based on Practical Feedback from Software Industry","type":"publication"},{"authors":["Jihun Park","Donghwan Shin","Gwangui Hong","Dongwon Seo","Jimin Hwa","Gigon Bae","Yeong-Seok Seo","Doo-Hwan Bae"],"categories":null,"content":"","date":1356998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1356998400,"objectID":"693bd60a530ab8bc424975a25a2eadad","permalink":"https://donghwan-shin.github.io/publication/content/publication/park-2013-automatic/","publishdate":"2019-12-21T19:24:06.335589Z","relpermalink":"/publication/content/publication/park-2013-automatic/","section":"publication","summary":"","tags":null,"title":"Automatic Project Planning Technique and Tool Based on Software Industry Requirements","type":"publication"},{"authors":["Jihun Park","Donghwan Shin","Gwangui Hong","Dongwon Seo","Jimin Hwa","Gigon Bae","Yeong-Seok Seo","Doo-Hwan Bae"],"categories":null,"content":"","date":1356998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1356998400,"objectID":"8acbd26cba0eb934bf185b7db56bde04","permalink":"https://donghwan-shin.github.io/publication/park-2013-automatic/","publishdate":"2019-12-21T17:27:44.168294Z","relpermalink":"/publication/park-2013-automatic/","section":"publication","summary":"","tags":null,"title":"Automatic Project Planning Technique and Tool Based on Software Industry Requirements","type":"publication"},{"authors":["Dong-Hwan Shin","Eun-Kyoung Jee","Doo-Hwan Bae"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376000,"objectID":"9401a9598328127ff734bd89bcbdb3e3","permalink":"https://donghwan-shin.github.io/publication/content/publication/shin-2012-definition/","publishdate":"2019-12-21T19:24:06.335059Z","relpermalink":"/publication/content/publication/shin-2012-definition/","section":"publication","summary":"","tags":null,"title":"Definition of Mutation Operators for FBD Models","type":"publication"},{"authors":["Dong-Hwan Shin","Eun-Kyoung Jee","Doo-Hwan Bae"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376000,"objectID":"372916b78157123e7e5f815db1a50621","permalink":"https://donghwan-shin.github.io/publication/shin-2012-definition/","publishdate":"2019-12-21T17:27:44.16746Z","relpermalink":"/publication/shin-2012-definition/","section":"publication","summary":"","tags":null,"title":"Definition of Mutation Operators for FBD Models","type":"publication"},{"authors":["Donghwan Shin","Eunkyoung Jee","Doo-Hwan Bae"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376000,"objectID":"a051aa84d28d798de4bdd171e55e447e","permalink":"https://donghwan-shin.github.io/publication/10-1007-978-3-642-33666-9-30/","publishdate":"2019-12-21T17:27:44.164365Z","relpermalink":"/publication/10-1007-978-3-642-33666-9-30/","section":"publication","summary":"Function Block Diagram (FBD), one of the PLC programming languages, is a graphical modeling language which has been increasingly used to implement safety-critical software such as nuclear reactor protection software. With increased importance of structural testing for FBD models, FBD model-based test coverage criteria have been introduced. In this paper, we empirically evaluate the fault detection effectiveness of the FBD coverage criteria using mutation analysis. We produce 1800 test suites satisfying the FBD criteria and generate more than 600 mutants automatically for the target industrial FBD models. Then we evaluate mutant detection of the test suites to assess the fault detection effectiveness of the coverage criteria. Based on the experimental results, we analyze strengths and weaknesses of the FBD coverage criteria, and suggest possible improvements for the test coverage criteria.","tags":null,"title":"Empirical Evaluation on FBD Model-Based Test Coverage Criteria Using Mutation Analysis","type":"publication"},{"authors":["Donghwan Shin","Eunkyoung Jee","Doo-Hwan Bae"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376000,"objectID":"1f2da338616dc30c35d4ca6bbcfbacb8","permalink":"https://donghwan-shin.github.io/publication/content/publication/10-1007-978-3-642-33666-9-30/","publishdate":"2019-12-21T19:24:06.332827Z","relpermalink":"/publication/content/publication/10-1007-978-3-642-33666-9-30/","section":"publication","summary":"Function Block Diagram (FBD), one of the PLC programming languages, is a graphical modeling language which has been increasingly used to implement safety-critical software such as nuclear reactor protection software. With increased importance of structural testing for FBD models, FBD model-based test coverage criteria have been introduced. In this paper, we empirically evaluate the fault detection effectiveness of the FBD coverage criteria using mutation analysis. We produce 1800 test suites satisfying the FBD criteria and generate more than 600 mutants automatically for the target industrial FBD models. Then we evaluate mutant detection of the test suites to assess the fault detection effectiveness of the coverage criteria. Based on the experimental results, we analyze strengths and weaknesses of the FBD coverage criteria, and suggest possible improvements for the test coverage criteria.","tags":null,"title":"Empirical Evaluation on FBD Model-Based Test Coverage Criteria Using Mutation Analysis","type":"publication"},{"authors":["Yeong-Seok Seo","Donghwan Shin","Gookhyun Kim","Jongmoon Baik","Doo-Hwan Bae"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376000,"objectID":"00c6cab9f4e67d8321e515feaff994c0","permalink":"https://donghwan-shin.github.io/publication/content/publication/seo-2012-identification/","publishdate":"2019-12-21T19:24:06.325658Z","relpermalink":"/publication/content/publication/seo-2012-identification/","section":"publication","summary":"","tags":null,"title":"Identification of Quality Improvement Strategies using COPQ in Software Industry","type":"publication"},{"authors":["Yeong-Seok Seo","Donghwan Shin","Gookhyun Kim","Jongmoon Baik","Doo-Hwan Bae"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376000,"objectID":"17c95159880f9a2617726feb882c70dc","permalink":"https://donghwan-shin.github.io/publication/seo-2012-identification/","publishdate":"2019-12-21T17:27:44.158516Z","relpermalink":"/publication/seo-2012-identification/","section":"publication","summary":"","tags":null,"title":"Identification of Quality Improvement Strategies using COPQ in Software Industry","type":"publication"}]