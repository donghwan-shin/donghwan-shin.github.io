@ARTICLE{7994647,
author={D. {Shin} and S. {Yoo} and D. {Bae}},
journal={IEEE Transactions on Software Engineering},
title={A Theoretical and Empirical Study of Diversity-Aware Mutation Adequacy Criterion},
year={2018},
volume={44},
number={10},
pages={914-931},
doi={10.1109/TSE.2017.2732347},
ISSN={2326-3881},
month={Oct},}

@article{doi:10.1002/stvr.1548,
author = {Jee, Eunkyoung and Shin, Donghwan and Cha, Sungdeok and Lee, Jang-Soo and Bae, Doo-Hwan},
title = {Automated test case generation for FBD programs implementing reactor protection system software},
journal = {Software Testing, Verification and Reliability},
volume = {24},
number = {8},
pages = {608-628},
keywords = {automated test case generation, function block diagram, SMT solver, programmable logic controller},
doi = {10.1002/stvr.1548},
url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/stvr.1548},
eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/stvr.1548},
abstract = {Automated and effective testing for function block diagram (FBD) programs has become an important issue, as FBD is increasingly used in implementing safety-critical systems. This work describes an automated test case generation technique for FBD programs and its associated tool—FBDTester. Given an FBD program and desired test coverage criteria, FBDTester generates test requirements and invokes the Satisfiability Modulo Theories solver iteratively to derive a set of test cases. An industrial case study using reactor protection system software shows that the automatically generated test suites detected at least 82\% of the known faults, whereas manually generated test cases only detected approximately 35\%. Mutation analysis revealed that the automatically generated test suites substantially outperformed manually generated ones. Although test sequence generation requires some manual effort in the current FBDTester, it is apparent that the proposed approach significantly improves the efficiency and the reliability of FBD testing. Copyright © 2014 John Wiley \& Sons, Ltd.},
year = {2014}
}

@article{doi:10.1002/stvr.1695,
author = {Shin, Donghwan and Yoo, Shin and Papadakis, Mike and Bae, Doo-Hwan},
title = {Empirical evaluation of mutation-based test case prioritization techniques},
journal = {Software Testing, Verification and Reliability},
volume = {29},
number = {1-2},
pages = {e1695},
keywords = {mutation testing, test case prioritization, regression testing},
doi = {10.1002/stvr.1695},
url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/stvr.1695},
eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/stvr.1695},
note = {e1695 stvr.1695},
abstract = {In this paper, we propose a new test case prioritization technique that combines both mutation-based and diversity-aware approaches. The diversity-aware mutation-based technique relies on the notion of mutant distinguishment, which aims to distinguish one mutant's behaviour from another, rather than from the original program. The relative cost and effectiveness of the mutation-based prioritization techniques (i.e., using both the traditional mutant kill and the proposed mutant distinguishment) are empirically investigated with 352 real faults and 553,477 developer-written test cases. The empirical evaluation considers both the traditional and the diversity-aware mutation criteria in various settings: single-objective greedy, hybrid, and multi-objective optimization. The results show that there is no single dominant technique across all the studied faults. To this end, the reason why each one of the mutation-based prioritization criteria performs poorly is discussed, using a graphical model called Mutant Distinguishment Graph that demonstrates the distribution of the fault-detecting test cases with respect to mutant kills and distinguishment. © 2018 John Wiley \& Sons, Ltd.},
year = {2019}
}

@article{shin2016comprehensive,
author = {Shin, Donghwan and Jee, Eunkyoung and Bae, Doo-Hwan},
year = {2016},
title = {{Comprehensive analysis of FBD test coverage criteria using mutants}},
journal = {Software & Systems Modeling},
issn = {1619-1366},
doi = {10.1007/s10270-014-0428-y},
volume = {15},
month = {7},
pages = {631--645},
number = {3},
url = {https://doi.org/10.1007/s10270-014-0428-y},
abstract = {{Function block diagram (FBD), a graphical modeling language for programmable logic controllers, has been widely used to implement safety critical system software such as nuclear reactor protection systems. With the growing importance of structural testing for FBD models, structural test coverage criteria for FBD models have been proposed and evaluated using mutation analysis in our previous work. We extend the previous work by comprehensively analyzing the relationships among fault detection effectiveness, test suite size, and coverage level through several research questions. We generate a large number of test suites achieving an FBD test coverage ranging from 0 to 100 %, and we also generate many artificial faults (i.e. mutants) for the FBD models. Our analysis results show that the fault detection effectiveness of the FBD coverage criteria increases with increasing coverage levels, and the coverage criteria are highly effective at detecting faults in all subject models. Furthermore, the test suites generated with the FBD coverage criteria are more effective and efficient than the randomly generated test suites. The FBD coverage criteria are strong at detecting faults in Boolean edges, while relatively weak at detecting wrong constants in FBD models. Empirical knowledge regarding our experiments provide the validity of using the FBD coverage criteria, and therefore, of FBD model-based testing.}}
}

@article{doi:10.1142/S021819401540001X,
author = {Park, Jihun and Seo, Dongwon and Hong, Gwangui and Shin, Donghwan and Hwa, Jimin and Bae, Doo-Hwan},
title = {Human Resource Allocation in Software Project with Practical Considerations},
journal = {International Journal of Software Engineering and Knowledge Engineering},
volume = {25},
number = {01},
pages = {5-26},
year = {2015},
doi = {10.1142/S021819401540001X},
URL = {https://doi.org/10.1142/S021819401540001X},
eprint = {https://doi.org/10.1142/S021819401540001X},
abstract = { Software planning is very important for the success of a software project. Even if the same developers work on the same project, the time span of the project and the quality of software may change based on the project plan. When software managers plan a software project, they strive to allocate human resources in a more efficient way to produce a better software with less cost. The planning process is, however, time-consuming and complicated, especially when the size of the software project is large. Many approaches have been proposed to help software project managers by providing optimal human resource allocations in terms of minimizing the cost. Previous approaches, however, only concentrated on minimizing the cost, and no existing works have considered the practical issues affecting project schedules in practice. We elicited the practical considerations relating to the human resource allocation problem through discussions with a group of software project experts. The practical considerations can affect the project schedule in practice, but their importance has not been taken into consideration in previous approaches. Reflecting the practical considerations, we propose an approach for solving the human resource allocation problem using a genetic algorithm (GA). We compare our approach to an approach that only considers minimization of the time span. Our evaluation shows that the proposed algorithm considers the practical considerations well, in terms of continuous allocation on relevant tasks, minimization of developer multitasking time, and balance of allocation. We also conducted a survey targeting software developers and managers, and the responses showed that practical considerations are as important as minimizing the cost, and our approach would be helpful to software managers. We also investigate the effect of weight factors and coefficient between sub-scores, and find that it is difficult to consider some practical considerations at the same time.}
}

@article{seo2012identification,
  title={Identification of Quality Improvement Strategies using COPQ in Software Industry},
  author={Seo, Yeong-Seok and Shin, Donghwan and Kim, Gookhyun and Baik, Jongmoon and Bae, Doo-Hwan},
  journal={International Journal of Performability Engineering},
  volume={8},
  number={6},
  pages={679--688},
  year={2012},
  publisher={RAMS Consultants, 71, Vrindaban Vihar, Ajmer Rd Jaipur, Rajasthan 302 019 India}
}

@INPROCEEDINGS{8666514,
author={J. {Yoo} and Y. {Jung} and D. {Shin} and M. {Bae} and E. {Jee}},
booktitle={2019 IEEE International Workshop on Blockchain Oriented Software Engineering (IWBOSE)},
title={Formal Modeling and Verification of a Federated Byzantine Agreement Algorithm for Blockchain Platforms},
year={2019},
volume={},
number={},
pages={11-21},
keywords={Blockchain;Consensus algorithm;Safety;Cryptocurrency;federated Byzantine agreement;Stellar Consensus Protocol;UPPAAL},
doi={10.1109/IWBOSE.2019.8666514},
ISSN={null},
month={Feb},}

@inproceedings{Papadakis:2018:MSC:3180155.3180183,
 author = {Papadakis, Mike and Shin, Donghwan and Yoo, Shin and Bae, Doo-Hwan},
 title = {Are Mutation Scores Correlated with Real Fault Detection?: A Large Scale Empirical Study on the Relationship Between Mutants and Real Faults},
 booktitle = {Proceedings of the 40th International Conference on Software Engineering},
 series = {ICSE '18},
 year = {2018},
 isbn = {978-1-4503-5638-1},
 location = {Gothenburg, Sweden},
 pages = {537--548},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/3180155.3180183},
 doi = {10.1145/3180155.3180183},
 acmid = {3180183},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {mutation testing, real faults, test suite effectiveness},
}

@inproceedings{Jin:2018:AEA:3167132.3167426,
 author = {Jin, Mingyu and Shin, Donghwan and Bae, Doo-Hwan},
 title = {ABC+: Extended Action-benefit-cost Modeling with Knowledge-based Decision-making and Interaction Model for System of Systems Simulation},
 booktitle = {Proceedings of the 33rd Annual ACM Symposium on Applied Computing},
 series = {SAC '18},
 year = {2018},
 isbn = {978-1-4503-5191-1},
 location = {Pau, France},
 pages = {1698--1701},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/3167132.3167426},
 doi = {10.1145/3167132.3167426},
 acmid = {3167426},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {action-benefit-cost modeling, agent-based modeling, decision-making, interaction, system of systems},
}

@inproceedings{Yun:2017:MAS:3103196.3103200,
 author = {Yun, Wonkyung and Shin, Donghwan and Bae, Doo-Hwan},
 title = {Mutation Analysis for System of Systems Policy Testing},
 booktitle = {Proceedings of the Joint 5th International Workshop on Software Engineering for Systems-of-Systems and 11th Workshop on Distributed Software Development, Software Ecosystems and Systems-of-Systems},
 series = {JSOS '17},
 year = {2017},
 isbn = {978-1-5386-2799-0},
 location = {Buenos Aires, Argentina},
 pages = {16--22},
 numpages = {7},
 url = {https://doi.org/10.1109/JSOS.2017..9},
 doi = {10.1109/JSOS.2017..9},
 acmid = {3103200},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {mutation analysis, simulation of urban mobility (SUMO), system of systems, system of systems policy, system of systems testing},
}

@INPROCEEDINGS{7528954,
author={D. {Shin} and S. {Yoo} and D. {Bae}},
booktitle={2016 IEEE Ninth International Conference on Software Testing, Verification and Validation Workshops (ICSTW)},
title={Diversity-Aware Mutation Adequacy Criterion for Improving Fault Detection Capability},
year={2016},
volume={},
number={},
pages={122-131},
doi={10.1109/ICSTW.2016.37},
ISSN={null},
month={April},}

@INPROCEEDINGS{7515481,
author={D. {Shin} and D. {Bae}},
booktitle={2016 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
title={A Theoretical Framework for Understanding Mutation-Based Testing Methods},
year={2016},
volume={},
number={},
pages={299-308},
doi={10.1109/ICST.2016.22},
ISSN={null},
month={April},}

@inproceedings{seo2015quality,
  title={Quality Based Software Project Staffing and Scheduling with Budget and Deadline.},
  author={Seo, Dongwon and Shin, Donghwan and Bae, Doo-Hwan},
  booktitle={QuASoQ/WAWSE/CMCE@ APSEC},
  pages={58},
  year={2015}
}

@INPROCEEDINGS{7273621,
author={Y. J. {Lim} and E. {Jee} and D. {Shin} and D. {Bae}},
booktitle={2015 IEEE 39th Annual Computer Software and Applications Conference},
title={Efficient Testing of Self-Adaptive Behaviors in Collective Adaptive Systems},
year={2015},
volume={2},
number={},
pages={216-221},
doi={10.1109/COMPSAC.2015.131},
ISSN={0730-3157},
month={July},}

@inproceedings{park2014practical,
  title={Practical Human Resource Allocation in Software Projects Using Genetic Algorithm.},
  author={Park, Jihun and Seo, Dongwon and Hong, Gwangui and Shin, Donghwan and Hwa, Jimin and Bae, Doo-Hwan},
  booktitle={SEKE},
  pages={688--694},
  year={2014}
}

@InProceedings{10.1007/978-3-642-33666-9_30,
author="Shin, Donghwan
and Jee, Eunkyoung
and Bae, Doo-Hwan",
editor="France, Robert B.
and Kazmeier, J{\"u}rgen
and Breu, Ruth
and Atkinson, Colin",
title="Empirical Evaluation on FBD Model-Based Test Coverage Criteria Using Mutation Analysis",
booktitle="Model Driven Engineering Languages and Systems",
year="2012",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="465--479",
abstract="Function Block Diagram (FBD), one of the PLC programming languages, is a graphical modeling language which has been increasingly used to implement safety-critical software such as nuclear reactor protection software. With increased importance of structural testing for FBD models, FBD model-based test coverage criteria have been introduced. In this paper, we empirically evaluate the fault detection effectiveness of the FBD coverage criteria using mutation analysis. We produce 1800 test suites satisfying the FBD criteria and generate more than 600 mutants automatically for the target industrial FBD models. Then we evaluate mutant detection of the test suites to assess the fault detection effectiveness of the coverage criteria. Based on the experimental results, we analyze strengths and weaknesses of the FBD coverage criteria, and suggest possible improvements for the test coverage criteria.",
isbn="978-3-642-33666-9"
}

@article{kim2017applicability,
  title={An Applicability Study of Action-Benefit-Cost Model and Statistical Model Checking for System of Systems Goal Achievement Verification},
  author={Kim, Junho and Shin, Donghwan and Bae, Doo-Hwan},
  journal={KIISE Transactions on Computing Practices},
  volume={23},
  number={4},
  pages={256--261},
  year={2017},
  publisher={Korean Institute of Information Scientists and Engineers}
}

@article{shin2016case,
  title={A Case Study for Mutation-based Fault Localization for FBD Programs},
  author={Shin, Donghwan and Kim, Junho and Yun, Wonkyung and Jee, Eunkyoung and Bae, Doo-Hwan},
  journal={KIISE Transactions on Computing Practices},
  volume={22},
  number={3},
  pages={145--150},
  year={2016},
  publisher={Korean Institute of Information Scientists and Engineers}
}

@article{seo2015quality2,
  title={Quality-based software project staffing and scheduling with project deadline},
  author={Seo, Dongwon and Shin, Donghwan and Bae, Doo-Hwan},
  journal={Journal of KIISE},
  volume={42},
  number={7},
  pages={878--888},
  year={2015},
  publisher={Korean Institute of Information Scientists and Engineers}
}

@inproceedings{shin2012definition,
  title={Definition of Mutation Operators for FBD Models},
  author={Shin, Dong-Hwan and Jee, Eun-Kyoung and Bae, Doo-Hwan},
  booktitle={Proceedings of the Korean Information Science Society Conference},
  pages={184--186},
  year={2012},
  organization={Korean Institute of Information Scientists and Engineers}
}

@article{park2013automatic,
  title={Automatic Project Planning Technique and Tool Based on Software Industry Requirements},
  author={Park, Jihun and Shin, Donghwan and Hong, Gwangui and Seo, Dongwon and Hwa, Jimin and Bae, Gigon and Seo, Yeong-Seok and Bae, Doo-Hwan},
  journal={Journal of Software Engineering Society},
  volume={26},
  number={4},
  pages={77--92},
  year={2013},
  publisher={Software Engineering Society}
}

@article{hwa2013automated,
  title={Automated Human Resource Allocation based on Practical Feedback from Software Industry},
  author={Hwa, J and Park, J and Shin, D and Hong, G and Seo, YS and Bae, G and Bae, DH},
  journal={Journal of KIISE: Software and Applications},
  volume={40},
  number={5},
  pages={369--380},
  year={2013}
}

@INPROCEEDINGS{haq2019comparing,
  author={Haq, Fitash Ul and Shin, Donghwan and Nejati, Shiva and Briand, Lionel},
  booktitle={2020 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
  title={Comparing Offline and Online Testing of Deep Neural Networks: An Autonomous Car Case Study},
  year={2020 (to appear)},
  volume={},
  number={},
  pages={},
}
